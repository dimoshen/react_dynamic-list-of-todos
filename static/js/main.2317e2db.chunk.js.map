{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setTodoId","todoId","setSelectedTodo","onButtonClick","id","selectedTodo","find","todo","className","map","completed","classNames","title","type","onClick","TodoFilter","setFilteredTodos","useState","query","setQuery","status","setStatus","useEffect","updatedTodos","filteredTodos","filter","trimmedQuery","trim","toLowerCase","includes","defaultValue","onChange","event","selectedStatus","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","isLoading","setIsLoading","user","setUser","userId","result","catch","Error","href","email","name","App","setTodos","loading","setLoading","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2317e2db.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  todoId: number | null;\n  setTodoId: React.Dispatch<React.SetStateAction<number | null>>;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoId,\n  todoId,\n  setSelectedTodo,\n}) => {\n  const onButtonClick = (id: number) => {\n    if (todoId === id) {\n      setTodoId(null);\n      setSelectedTodo(null);\n    } else {\n      setTodoId(id);\n      const selectedTodo = todos.find((todo) => todo.id === id) || null;\n\n      setSelectedTodo(selectedTodo);\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {todoId === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button is-link\"\n                  type=\"button\"\n                  onClick={() => onButtonClick(0)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onButtonClick(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedStatus = event.target.value;\n\n    setStatus(selectedStatus);\n  };\n\n  useEffect(() => {\n    const filteredTodos = todos.filter((todo) => {\n      const { title } = todo;\n      const trimmedQuery = query.trim().toLowerCase();\n\n      return title.toLowerCase().includes(trimmedQuery);\n    });\n\n    let updatedTodos;\n\n    switch (status) {\n      case 'active': {\n        updatedTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      }\n\n      case 'completed': {\n        updatedTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      }\n\n      default: updatedTodos = filteredTodos;\n    }\n\n    setFilteredTodos(updatedTodos);\n  }, [todos, query, status, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue=\"all\"\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((result: User) => {\n        setUser(result);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        throw new Error('Something went wrong: Could not load data');\n      });\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState<number | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer: Todo[]) => {\n        setTodos(todosFromServer);\n        setFilteredTodos(todosFromServer);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        throw new Error('Data not found');\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} setFilteredTodos={setFilteredTodos} />\n            </div>\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  todoId={todoId}\n                  setTodoId={setTodoId}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => {\n            setSelectedTodo(null);\n            setTodoId(0);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}